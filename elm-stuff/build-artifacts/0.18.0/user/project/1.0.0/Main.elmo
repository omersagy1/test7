var _user$project$Main$switchPage = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.currentPage, _user$project$Model$EditorPage) ? _elm_lang$core$Native_Utils.update(
		model,
		{currentPage: _user$project$Model$GamePage}) : _elm_lang$core$Native_Utils.update(
		model,
		{currentPage: _user$project$Model$EditorPage});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = {ctor: '_Tuple2', _0: msg, _1: model.currentPage};
		_v0_3:
		do {
			if (_p0.ctor === '_Tuple2') {
				switch (_p0._0.ctor) {
					case 'EditorMessage':
						if (_p0._1.ctor === 'EditorPage') {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Native_Utils.update(
									model,
									{
										editorModel: A2(_user$project$Editor_Main$updateEditor, _p0._0._0, model.editorModel)
									}),
								_1: _elm_lang$core$Platform_Cmd$none
							};
						} else {
							break _v0_3;
						}
					case 'GameMessage':
						if (_p0._1.ctor === 'GamePage') {
							return {
								ctor: '_Tuple2',
								_0: _elm_lang$core$Native_Utils.update(
									model,
									{
										gameModel: A2(_user$project$Game_Update$update, _p0._0._0, model.gameModel)
									}),
								_1: _elm_lang$core$Platform_Cmd$none
							};
						} else {
							break _v0_3;
						}
					default:
						return {
							ctor: '_Tuple2',
							_0: _user$project$Main$switchPage(model),
							_1: _elm_lang$core$Platform_Cmd$none
						};
				}
			} else {
				break _v0_3;
			}
		} while(false);
		return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Main$subscriptions = function (model) {
	var _p1 = model.currentPage;
	if (_p1.ctor === 'EditorPage') {
		return A2(
			_elm_lang$core$Platform_Sub$map,
			_user$project$Model$EditorMessage,
			_elm_lang$animation_frame$AnimationFrame$diffs(_user$project$Editor_Main$UpdateTime));
	} else {
		return A2(
			_elm_lang$core$Platform_Sub$map,
			_user$project$Model$GameMessage,
			_user$project$Game_Subs$subscriptions(model.gameModel));
	}
};
var _user$project$Main$model = {currentPage: _user$project$Model$GamePage, editorModel: _user$project$Editor_Main$initialModel, gameModel: _user$project$Game_Model$initialModel};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$main = _rtfeldman$elm_css$Html_Styled$program(
	{init: _user$project$Main$init, view: _user$project$Render_App$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
