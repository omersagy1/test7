var _user$project$Main$renderCorpus = function (l) {
	var numberedLines = A2(
		_elm_lang$core$List$map,
		function (_p0) {
			var _p1 = _p0;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(_p1._0 + 1),
				A2(_elm_lang$core$Basics_ops['++'], '. ', _p1._1));
		},
		_user$project$Annex$enumerate(l));
	var lineDivs = A2(
		_elm_lang$core$List$map,
		function (x) {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(x),
					_1: {ctor: '[]'}
				});
		},
		numberedLines);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '5px'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		lineDivs);
};
var _user$project$Main$corpusHeader = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: '5px'},
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('CORPUS'),
		_1: {ctor: '[]'}
	});
var _user$project$Main$gameLoop = F2(
	function (model, timePassed) {
		return model.paused ? model : _elm_lang$core$Native_Utils.update(
			model,
			{gameTime: model.gameTime + timePassed});
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var newModel = function () {
			var _p2 = msg;
			switch (_p2.ctor) {
				case 'UpdateTime':
					return A2(_user$project$Main$gameLoop, model, _p2._0);
				case 'AddText':
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							corpus: A2(
								_elm_lang$core$Basics_ops['++'],
								model.corpus,
								{
									ctor: '::',
									_0: model.textDraft,
									_1: {ctor: '[]'}
								}),
							textDraft: ''
						});
				case 'SaveDraft':
					return _elm_lang$core$Native_Utils.update(
						model,
						{textDraft: _p2._0});
				case 'Play':
					return _elm_lang$core$Native_Utils.update(
						model,
						{paused: false});
				default:
					return _elm_lang$core$Native_Utils.update(
						model,
						{paused: true});
			}
		}();
		return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Main$model = {
	val: 0,
	corpus: {ctor: '[]'},
	display: {ctor: '[]'},
	textDraft: '',
	gameTime: 0,
	paused: true
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F6(
	function (a, b, c, d, e, f) {
		return {val: a, corpus: b, display: c, textDraft: d, gameTime: e, paused: f};
	});
var _user$project$Main$Pause = {ctor: 'Pause'};
var _user$project$Main$Play = {ctor: 'Play'};
var _user$project$Main$renderPlay = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: '5px'},
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '5px'},
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Play),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('PLAY'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Pause),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('PAUSE'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$SaveDraft = function (a) {
	return {ctor: 'SaveDraft', _0: a};
};
var _user$project$Main$AddText = {ctor: 'AddText'};
var _user$project$Main$renderAddText = function (draft) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '5px'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$SaveDraft),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(draft),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$AddText),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Add Text'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Main$corpusHeader,
			_1: {
				ctor: '::',
				_0: _user$project$Main$renderCorpus(model.corpus),
				_1: {
					ctor: '::',
					_0: _user$project$Main$renderAddText(model.textDraft),
					_1: {
						ctor: '::',
						_0: _user$project$Main$renderPlay,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$UpdateTime = function (a) {
	return {ctor: 'UpdateTime', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$animation_frame$AnimationFrame$diffs(_user$project$Main$UpdateTime);
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
